pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Tayanchonk/reactjs-coding-agent-demo.git'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '''
                echo "Checking for Node.js and NPM..."
                command -v node && echo Node.js and NPM found.
                node --version
                command -v npm
                npm --version
                npm install
                '''
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    script {
                        def scannerHome = tool 'SonarScanner'
                        sh """
                        ${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=reactjs-coding-agent-demo \
                        -Dsonar.projectName=reactjs-coding-agent-demo \
                        -Dsonar.sources=src \
                        -Dsonar.projectBaseDir=${WORKSPACE} \
                        -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx \
                        -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info \
                        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
                        """
                    }
                }
            }
        }
        
        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        
        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}